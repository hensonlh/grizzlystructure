############################################################################################## install and load packages install.packages(“rgdal”)library(rgdal)install.packages(“stats”)library(stats)install.packages(“scales”)library(scales)install.packages(“ecodist”)library(ecodist)ecodist.mantel<-ecodist::mantel #will always run mantel in ecodist##############################################################################################import data #create genetic distance matrix from Structure Q values qmatrixNoKiti<-read.csv('QmatrixNoKiti.csv')structnokiti<-dist(qmatrixNoKiti, method = "euclidean")# create geographic distance matrixmeanxynokiti<-read.csv('meanxynokitisimple.csv')xyalbnokitidist<-dist(meanxynokiti, method="euclidean")xyalbnokiti<-as.matrix(xyalbnokitidist)# read in variable data files turnernokiti<-read.table('turner150albnokiti.txt')trapnokiti<-read.table('trap150nokiti.txt')middennokiti<-read.table(‘midden150nokiti.txt’)icenokiti<-read.table(‘ice150nokiti.txt’)TRInokiti<-read.table(‘TRI150nokiti.txt’)coastnokiti<-read.table('coast150nokiti.txt')modernnokiti<-read.table(‘mdrn150nokiti.txt’)forestrynokiti<-read.table(‘forestry150nokiti.txt’)# isolate lower half of distance matrices structnokiti.l<-lower(structnokitimatrix)xyalbnokiti.l<-lower(xyalbnokitimatrix)turnernokiti.l<-lower(turnernokiti)trapnokiti.l<-lower(trapnokiti)middennokiti.l<-lower(middennokiti)icenokiti.l<-lower(icenokiti)TRInokiti.l<-lower(TRInokiti)coastnokiti.l<-lower(coastnokiti)modernnokiti.l<-lower(modernnokiti)forestrynokiti.l<-lower(forestrynokiti)###############################################################################Partial mantel tests mantel(structnokiti.l~turnernokiti.l + xyalbnokiti.l, nperm=999)mantel(structnokiti.l~icenokiti.l + xyalbnokiti.l, nperm=999)mantel(structnokiti.l~coastnokiti.l + xyalbnokiti.l, nperm=999)mantel(structnokiti.l~modernnokiti.l + xyalbnokiti.l, nperm=999)mantel(structnokiti.l~forestrynokiti.l + xyalbnokiti.l, nperm=999)mantel(structnokiti.l~middennokiti.l + xyalbnokiti.l, nperm=999)mantel(structnokiti.l~trapnokiti.l + xyalbnokiti.l, nperm=999) mantel(structnokiti.l~TRInokiti.l + xyalbnokiti.l, nperm=999)#Correlations among variables mantel(turnernokiti.l ~middennokiti.l, nperm=999)mantel(turnernokiti.l ~TRInokiti.l, nperm=999)mantel(turnernokiti.l ~trapnokiti.l, nperm=999)mantel(turnernokiti.l ~modernnokiti.l, nperm=999)mantel(turnernokiti.l ~forestrynokiti.l, nperm=999)mantel(turnernokiti.l ~icenokiti.l, nperm=999)mantel(turnernokiti.l ~coastnokiti.l, nperm=999)mantel(middennokiti.l~TRInokiti.l, nperm=999)mantel(middennokiti.l~trapnokiti.l, nperm=999)mantel(middennokiti.l~modernnokiti.l, nperm=999)mantel(middennokiti.l~forestrynokiti.l, nperm=999) mantel(middennokiti.l~icenokiti.l, nperm=999)mantel(middennokiti.l~coastnokiti.l, nperm=999)mantel(TRInokiti.l~trapnokiti.l, nperm=999)mantel(TRInokiti.l~modernnokiti.l, nperm=999)mantel(TRInokiti.l~forestrynokiti.l, nperm=999)mantel(TRInokiti.l~icenokiti.l, nperm=999)mantel(TRInokiti.l~coastnokiti.l, nperm=999) mantel(trapnokiti.l~icenokiti.l, nperm=999)mantel(trapnokiti.l~coastnokiti.l, nperm=999)mantel(modernnokiti.l~forestrynokiti.l, nperm=999)mantel(modernnokiti.l~icenokiti.l, nperm=999)mantel(modernnokiti.l~coastnokiti.l, nperm=999)mantel(forestrynokiti.l~icenokiti.l, nperm=999)mantel(forestrynokiti.l~coastnokiti.l, nperm=999)mantel(icenokiti.l~coastnokiti.l, nperm=999)##############################################################################################CA lrdm #Archaeological surface all variablesY=structnokitimatrixX1= read.table("turner150albnokiti.txt",h=F) #Indigenous languageX2 = read.table("trap150nokiti.txt",h=F)# fish trapX3 = read.table("midden150nokiti.txt",h=F)# shell middensX4 = read.table("ice150nokiti.txt",h=F)# ice and snow X5 = read.table("coast150nokiti.txt",h=F)# water barriersX6 = read.table("TRI150nokiti.txt",h=F)# TRInessX7 = xyalbnokiti #geographic distance mydatastructnokitihistallcoastxynoweir=list(GD=Y,F1=X1,F2=X2,F3=X3,F4=X4,F5=X5,F6=X6,F7=X7)histall=CAlrdmnew(mydata = mydatastructnokitihistallcoastxynoweir,regrnperm = 10000, bootn = 1000, bootprop = 0.09)#Modern surface all variablesY=structnokitimatrixX1=read.table("mdrn150nokiti.txt",h=F)# modern settlementX2 = read.table("forestry150nokiti.txt",h=F) #forestryX3 = read.table("ice150nokiti.txt",h=F)#ice and snow X4 = read.table("coast150nokiti.txt",h=F)# water barriersX5 = read.table("TRI150nokiti.txt",h=F)# TRInessX6 = xyalbnokiti #geographic distancemydatastructnokitimdrnallxycoastnofire=list(GD=Y,F1=X1,F2=X2,F3=X3,F4=X4,F5=X5,F6=X6)mdrnall=CAlrdm(mydata = mydatastructnokitimdrnallxycoastnofire,regrnperm = 10000, bootn = 1000, bootprop = 0.09)##############################################################################################perform LM and extract residuals #STRUCTURE Q VALUES qvaluesnokitilm<-lm(structnokiti.l~xyalbnokiti.l)res.qvaluesnokitilm<-residuals(qvaluesnokitilm) res.qvaluesnokitilmrescale<-rescale(res.qvaluesnokitilm, to = c(0,100)) res.qlmmatrixnagh<-as.matrix(res.qvaluesnokitilmrescale, nrow=nrow(structnokitimatrix),ncol=ncol(structnokitimatrix), upper=FALSE, diag=FALSE)str(res.qlmmatrixnagh) dim(res.qlmmatrixnagh) res.q<-diag(128)res.q[upper.tri(res.q, diag=FALSE)]<-res.qvaluesnokitilmrescalet(res.q)res.q[,128]t(res.q)[,128]res.q[lower.tri(res.q)]<-t(res.q)[lower.tri(res.q)] res.q#WATER BARRIERScoastnokitilm<-lm(coastnokiti.l~xyalbnokiti.l)res.coastnokitilm<-residuals(coastnokitilm)res.coastokitilmrescale<-rescale(res.coastnokitilm, to = c(0,100))res.coastokitilmrescaleres.coast<-diag(128)res.coast[upper.tri(res.coast, diag=FALSE)]<-res.coastokitilmrescalet(res.coast)res.coast[,128]t(res.coast)[,128]res.coast[lower.tri(res.coast)]<-t(res.coast)[lower.tri(res.coast)] res.coast#WATER BARRIERS MAXIMUM RESISTANCEworstcoast<-read.table('wrstcst150nokiti.txt')worstcoast.l<-lower(worstcoast)dim(worstcoast)worstcoastlm<-lm(worstcoast.l~xyalbnokiti.l)res.worstcoastlm<-residuals(worstcoastlm) #num [1:8128]res.worstcoastlmrescale<-rescale(res.worstcoastlm, to = c(0,100))res.worstcoast<-diag(128)res.worstcoast[upper.tri(res.worstcoast, diag=FALSE)]<-res.worstcoastlmrescalet(res.worstcoast)res.worstcoast[,128]t(res.worstcoast)[,128]res.worstcoast[lower.tri(res.worstcoast)]<-t(res.worstcoast)[lower.tri(res.worstcoast)] #because s is now the upperres.worstcoast#MIDDENSmiddennokitilm<-lm(middennokiti.l~xyalbnokiti.l)res.middennokitilm<-residuals(middennokitilm)res.middennokitilmrescale<-rescale(res.middennokitilm, to = c(0,100))str(res.middennokitilmrescale)res.midden<-diag(128)res.midden[upper.tri(res.midden, diag=FALSE)]<-res.middennokitilmrescalet(res.midden)res.midden[,128]t(res.midden)[,128]res.midden[lower.tri(res.midden)]<-t(res.midden)[lower.tri(res.midden)] res.midden#FISH TRAPStrapnokitilm<-lm(trapnokiti.l~xyalbnokiti.l)res.trapnokitilm<-residuals(trapnokitilm)res.trapnokitilmrescale<-rescale(res.trapnokitilm, to = c(0,100))res.trapnokitilmrescale res.trap<-diag(128)res.trap[upper.tri(res.trap, diag=FALSE)]<-res.trapnokitilmrescalet(res.trap)res.trap[,128]t(res.trap)[,128]res.trap[lower.tri(res.trap)]<-t(res.trap)[lower.tri(res.trap)] #because s is now the upperres.trap#SNOW AND ICEicenokitilm<-lm(icenokiti.l~xyalbnokiti.l)res.icenokitilm<-residuals(icenokitilm)res.icenokitilmrescale<-rescale(res.icenokitilm, to = c(0,100))res.icenokitilmrescaleres.ice<-diag(128)res.ice[upper.tri(res.ice, diag=FALSE)]<-res.icenokitilmrescalet(res.ice)res.ice[,128]t(res.ice)[,128]res.ice[lower.tri(res.ice)]<-t(res.ice)[lower.tri(res.ice)] #because s is now the upperres.ice#RUGGEDNESSTRInokitilm<-lm(TRInokiti.l~xyalbnokiti.l)res.TRInokitilm<-residuals(TRInokitilm)library(scales)res.ruggednokitilmrescale<-rescale(res.TRInokitilm, to = c(0,100))res.ruggednokitilmrescaleres.rugged<-diag(128)res.rugged[upper.tri(res.rugged, diag=FALSE)]<-res.ruggednokitilmrescalet(res.rugged)res.rugged[,128]t(res.rugged)[,128]res.rugged[lower.tri(res.rugged)]<-t(res.rugged)[lower.tri(res.rugged)] #because s is now the upperres.rugged#INDIGENOUS LANGUAGE FAMILY BOUNDARIESturnernokitilm<-lm(turnernokiti.l~xyalbnokiti.l)res.turnernokitilm<-residuals(turnernokitilm)res.turnernokitilmrescale<-rescale(res.turnernokitilm, to = c(0,100))res.turnernokitilmrescaleres.turner<-diag(128)res.turner[upper.tri(res.turner, diag=FALSE)]<-res.turnernokitilmrescalet(res.turner)res.turner[,128]t(res.turner)[,128]res.turner[lower.tri(res.turner)]<-t(res.turner)[lower.tri(res.turner)] #because s is now the upperres.turner#MODERN HUMAN SETTLEMENTmodernnokitilm<-lm(modernnokiti.l~xyalbnokiti.l)res.modernnokitilm<-residuals(modernnokitilm)res.modernnokitilmrescale<-rescale(res.modernnokitilm, to = c(0,100))res.modernnokitilmrescaleres.modern<-diag(128)res.modern[upper.tri(res.modern, diag=FALSE)]<-res.modernnokitilmrescalet(res.modern)res.modern[,128]t(res.modern)[,128]res.modern[lower.tri(res.modern)]<-t(res.modern)[lower.tri(res.modern)] #because s is now the upperres.modern#FORESTRYforestrynokitilm<-lm(forestrynokiti.l~xyalbnokiti.l)res.forestrynokitilm<-residuals(forestrynokitilm)#[1:8128]res.forestrynokitilmrescale<-rescale(res.forestrynokitilm, to = c(0,100))res.forestrynokitilmrescaleres.forestry<-diag(128)res.forestry[upper.tri(res.forestry, diag=FALSE)]<-res.forestrynokitilmrescalet(res.forestry)res.forestry[,128]t(res.forestry)[,128]res.forestry[lower.tri(res.forestry)]<-t(res.forestry)[lower.tri(res.forestry)] #because s is now the upperres.forestry##############################################################################CA lrdm with residuals #Archaeological surface all variablesY=res.qX1= res.turner #Human languageX2 = res.trapX3 = res.middenX4 = res.iceX5 = res.coastX6 = res.ruggedmydatastructnokitihistallres=list(GD=Y,F1=X1,F2=X2,F3=X3,F4=X4,F5=X5,F6=X6)histallres=CAlrdmnew(mydata = mydatastructnokitihistallres,regrnperm = 10000, bootn = 1000, bootprop = 0.09)#Archaeological surface all variables with maximum water resistanceY=res.qX1= res.turner #Human languageX2 = res.trapX3 = res.middenX4 = res.iceX5 = res.worstcoastX6 = res.ruggedmydatastructnokitihistallresworstcoast=list(GD=Y,F1=X1,F2=X2,F3=X3,F4=X4,F5=X5,F6=X6)histallresWorstCoast=CAlrdm(mydata = mydatastructnokitihistallresworstcoast,regrnperm = 10000, bootn = 1000, bootprop = 0.09)#Modern surface all variables Y=res.qX1=res.modern# modern settlementX2 = res.forestryX3 = res.iceX4 = res.coast# water barriersX5 = res.rugged# ruggednessmydatastructnokitimdrnallres=list(GD=Y,F1=X1,F2=X2,F3=X3,F4=X4,F5=X5)mdrnallres=CAlrdmnew(mydata = mydatastructnokitimdrnallres,regrnperm = 10000, bootn = 1000, bootprop = 0.09)